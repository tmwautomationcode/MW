package scenarios;

import baseClass.BaseClass;
import baseClass.PopupWindows;
import mwPages.CheckOutPage;
import mwPages.MyAccountAddressBookPage;
import mwPages.MyAccountPage;
import mwPages.MyAccountPaymentMethodsPage;
import mwPages.OrderConfirmationPage;
import mwPages.ProductDescriptionPage;
import mwPages.ProductGridPage;
import mwPages.ShoppingCartPage;
import mwPages.HomePage;
import mwPages.CreateAccountPage;
import mwPages.DepartmentNavigation;


public class RegisteredUserEditBillingDetailsfromReviewPageTest extends PopupWindows{

	private BaseClass obj;
	private CreateAccountPage createAccountPage;
	private OrderConfirmationPage orderConfirmationPage;
	private CheckOutPage checkoutPage;
	private ProductDescriptionPage productDescriptionPage;
	private ProductGridPage productGridPage;
	private ShoppingCartPage shoppingcartPage;
	private MyAccountPage myAccountPage;
	private MyAccountAddressBookPage myAccountAddressBookPage;
	private MyAccountPaymentMethodsPage myAccountPaymentMethodsPage;
	private HomePage homePage;
	private PopupWindows popupwindows;
	private DepartmentNavigation departmentNavigation;

	private String username=null, dynamicUsername=null;

	public RegisteredUserEditBillingDetailsfromReviewPageTest(BaseClass obj) {
		super(obj);
		this.obj=obj;
	}

	public void createObjects(String browser){
		obj.driver=driver;
		obj.currentBrowser=browser;
		createAccountPage = new	CreateAccountPage(obj);
		checkoutPage = new CheckOutPage(obj);
		orderConfirmationPage = new OrderConfirmationPage(obj);
		productDescriptionPage = new ProductDescriptionPage(obj);
		productGridPage = new ProductGridPage(obj);
		shoppingcartPage = new ShoppingCartPage(obj);
		myAccountPage = new MyAccountPage(obj);
		myAccountAddressBookPage = new MyAccountAddressBookPage(obj);
		myAccountPaymentMethodsPage = new MyAccountPaymentMethodsPage(obj);
		homePage= new HomePage(obj);
		popupwindows=new PopupWindows(obj);
	}


	public void destroyObjects(){
		checkoutPage = null;
		createAccountPage = null;
		orderConfirmationPage = null;
		productDescriptionPage = null;
		productGridPage = null;
		shoppingcartPage = null;
		myAccountPage = null;
		myAccountAddressBookPage = null;
		myAccountPaymentMethodsPage = null;
		homePage= null;
		popupwindows=null;
	}

	public void RegisteredUserEditBillingDetailsfromReviewPageTestScenario(String machineName,String host,String port,String browser,String os,String browserVersion,String osVersion, String tcId){
		try{

			testStepInfo("");
			testStepInfo("Opening Browser and Navigating to the URL");
			testStepInfo("*****************************************************");
			openBrowser(machineName, host, port, browser, os, browserVersion, osVersion);
			createObjects(browser);


			if (browser.equalsIgnoreCase("Chrome")||browser.equalsIgnoreCase("Firefox")) 
			{

				getJSESSIONIDOnceBrowserInitiated();

				getCLONEIDOnceBrowserInitiated();

			}


			if (browser.equalsIgnoreCase("Safari")) 
			{
				waitTime(5);
				verifySafariUSFlagSelected();
				homePage.ClickonHomePageLogo();
				waitTime(5);
			} 

			else 
			{
				verifyUSFlagSelected();
			}

			//clickOnBackToTopLinkInFooter();

			homePage.ClickonHomePageLogo();

			

			if (browser.equalsIgnoreCase("Firefox")) 
			{
				homePage.verifyBrowserOutdatedMessageisDisplayedAndClosed();
			}





			clickOnSignIn();

			popupwindows.clickOnCreateAccount();

			//waitTime(3);

			username=retrieve("EmailId");
			dynamicUsername=username.split("@")[0]+"_"+getCurrentDateAndTimeStamp()+"@"+username.split("@")[1];

			createAccountPage.fillSignUpForm(retrieve("FirstName"), retrieve("LastName"), dynamicUsername, retrieve("Password"), retrieve("PasswordAgain"));

			//waitTime(3);

			createAccountPage.clickOnCreateAccountButtonInRegistrationPage();

			waitTime(3);

			myAccountPage.verifyAccountDashBoardPageisDisplayed();

			//clickOnBackToTopLinkInFooter();

			myAccountPage.clickOnAddressBookLink();

			myAccountPage.clickOnAddressBook_AddNewAddressButton();




			myAccountPage.fillDetails_AddressBook_AddNewAddress1(retrieve("AccountDashboard_ShippingAddr_FirstName"), retrieve("AccountDashboard_ShippingAddr_LastName"), retrieve("AccountDashboard_ShippingAddr_Address"), retrieve("AccountDashboard_ShippingAddr_City"));

			myAccountPage.select_AddressBook_AddNewAddress_State(retrieve("AccountDashboard_ShippingAddr_State"));

			myAccountPage.fillDetails_AddressBook_AddNewAddress2(retrieve("AccountDashboard_ShippingAddr_Zip"), retrieve("AccountDashboard_ShippingAddr_Telephone"));

			myAccountPage.clickOnAddressBook_AddNewAddress_SubmitButton();

			//clickOnBackToTopLinkInFooter();

			//myAccountPage.SAPAddressValidationPopupisdispalyedandSelecttheAddressandContinue();

			myAccountPage.verify_AddressBook_NewAddress_Saved_MessageandClose();

			//clickOnBackToTopLinkInFooter();

			myAccountPage.clickOnAddressBook_MakeDefault_Link();







			myAccountPage.clickOnAccountInfoLink();

			myAccountPage.clickOnAccountInfo_PaymentMethodsLink();

			//clickOnBackToTopLinkInFooter();

			myAccountPage.clickOnAccountInfo_PaymentMethods_AddNewPaymentMethod_Button();

			myAccountPage.select_AccountInfo_PaymentMethods_AddNewPaymentMethod_CreditCardType(retrieve("AccountDashboard_PaymentDetails_CardType"));

			myAccountPage.fill_AccountInfo_PaymentMethods_AddNewPaymentMethod_CreditCardNo(retrieve("AccountDashboard_PaymentDetails_CardNo"));

			myAccountPage.select_AccountInfo_PaymentMethods_AddNewPaymentMethod_CreditCardMonth(retrieve("AccountDashboard_PaymentDetails_CardExpiryMonth"));

			myAccountPage.select_AccountInfo_PaymentMethods_AddNewPaymentMethod_CreditCardExpiryYear(retrieve("AccountDashboard_PaymentDetails_CardExpiryYear"));

			//myAccountPage.select_AccountInfo_PaymentMethods_AddNewPaymentMethod_Address(retrieve("Payment_Address"));

			myAccountPage.fill_AccountInfo_PaymentMethods_AddNewPaymentMethod_FirstName(retrieve("AccountDashboard_PaymentDetails_FirstName"));

			myAccountPage.fill_AccountInfo_PaymentMethods_AddNewPaymentMethod_LastName(retrieve("AccountDashboard_PaymentDetails_LastName"));

			myAccountPage.fill_AccountInfo_PaymentMethods_AddNewPaymentMethod_Address1(retrieve("AccountDashboard_PaymentDetails_Address"));

			myAccountPage.fill_AccountInfo_PaymentMethods_AddNewPaymentMethod_City(retrieve("AccountDashboard_PaymentDetails_City"));

			myAccountPage.Select_AccountInfo_PaymentMethods_AddNewPaymentMethod_State(retrieve("AccountDashboard_PaymentDetails_State"));

			myAccountPage.txt_AccountInfo_PaymentMethods_AddNewPaymentMethod_Zip(retrieve("AccountDashboard_PaymentDetails_Zip"));

			myAccountPage.txt_AccountInfo_PaymentMethods_AddNewPaymentMethod_PhoneNo(retrieve("AccountDashboard_PaymentDetails_Telephone"));

			myAccountPage.clickOnAccountInfo_PaymentMethods_AddNewPaymentMethod_SaveButton();

			//clickOnBackToTopLinkInFooter();

			myAccountPage.verify_AccountInfo_PaymentMethods_Savedchanges_MessageandClose();

			//clickOnBackToTopLinkInFooter();

			myAccountPage.clickOnPayment_MakeDefault_Link();



			String AccountDashboardPaymentDetailsCardType = myAccountPage.getPaymentDetailsCardType();

			//testStepPassed("AccountDashboardPaymentDetailsCardType : "+AccountDashboardPaymentDetailsCardType);

			String AccountDashboardPaymentDetailsCardNo = myAccountPage.getPaymentDetailsCardNo();

			//testStepPassed("AccountDashboardPaymentDetailsCardNo : "+AccountDashboardPaymentDetailsCardNo);

			String AccountDashboardPaymentDetailsCardMonthYear = myAccountPage.getPaymentDetailsCardExpiryMonthYear();

			//testStepPassed("AccountDashboardPaymentDetailsCardMonthYear : "+AccountDashboardPaymentDetailsCardMonthYear);



			if(getConfigProperty("UseSKU_ID").equalsIgnoreCase("no"))
			{
				departmentNavigation.clickOnDepartmentSubCategoryOrPromoLink(retrieve("DepartmentName"),retrieve("SubCategoryName"));

				productGridPage.VerifyProductslistedinPGPIfNotRefreshthePage();

				productGridPage.selectProductInProductGridPage(retrieve("ProductName"));


			}


			else
			{
				searchProductnew(retrieve("SkuID"));

				waitTime(3);

			}


			productDescriptionPage.verifyProductDisplayedinPDPPageIfNotRefreshThePage();

			String PDPProductName = productDescriptionPage.getProductNameInProductDescriptionPage();

			productDescriptionPage.selectSizeFromProductDescriptionPagenew(retrieve("ProductSize"));

			productDescriptionPage.clickPDPAddtoShoppingBagButton();


			if (browser.equalsIgnoreCase("InternetExplorer")) 
			{

				homePage.RegisteredUserProceedtoCheckoutinIE();

			}
			else 
			{

				//viewshoppingbag();
				clickonChromeFirefoxCheckout();

			}



			checkoutPage.VerifyReviewTab();

			String ReviewTabProductName = checkoutPage.getReviewTabProductName();

			//testStepPassed("ReviewTabProductName : "+ReviewTabProductName);

			if (PDPProductName.equalsIgnoreCase(ReviewTabProductName)) 
			{
				testStepInfo("Product added to the cart and review tab are same");
			}

			else 
			{
				testStepFailed("Product added to the cart and review tab are not same");
			}


			String ReviewTabPaymentDetailsCardType = checkoutPage.getReviewTabPaymentDetailsCardType();

			//testStepPassed("ReviewTabPaymentDetailsCardType : "+ReviewTabPaymentDetailsCardType);

			String ReviewTabPaymentDetailsCardNo = checkoutPage.getReviewTabPaymentDetailsCardNo();

			//testStepPassed("ReviewTabPaymentDetailsCardNo : "+ReviewTabPaymentDetailsCardNo);

			String ReviewTabPaymentDetailsCardExpiryDateYear = checkoutPage.getReviewTabPaymentDetailsCardExpiryDateYear();

			//testStepPassed("ReviewTabPaymentDetailsCardExpiryDateYear : "+ReviewTabPaymentDetailsCardExpiryDateYear);




			if (AccountDashboardPaymentDetailsCardType.equalsIgnoreCase(ReviewTabPaymentDetailsCardType)) 
			{
				if (AccountDashboardPaymentDetailsCardNo.equalsIgnoreCase(ReviewTabPaymentDetailsCardNo)) 
				{
					if (AccountDashboardPaymentDetailsCardMonthYear.equalsIgnoreCase(ReviewTabPaymentDetailsCardExpiryDateYear)) 
					{
						testStepInfo("Card Details in Account Dashboard and Review Tab are same");
					}
				}
			}

			else 
			{
				testStepFailed("Card Details in Account Dashboard and Review Tab are not same");
			}


			checkoutPage.VerifyPaymentDetailsSectionisDisplayedinReviewTab();

			checkoutPage.clickPaymentEditLinkinReviewTab();

			waitTime(2);

			if (checkoutPage.verifyEditPaymentModalisdisplayedinReviewTab()) 
			{
				checkoutPage.verifySavedCardDropdownisDispalyedWithValuesinEditBillingModalinReviewTab();

				checkoutPage.verifyEditCardLinkisDisplayedinEditBillingModalinReviewTab();

				checkoutPage.verifyAddNewCardLinkisDisplayedinEditBillingModalinReviewTab();

				checkoutPage.ClickEditCardLinkinEditShippingModalinReviewTab();

				checkoutPage.VerifyEditCardFormisPrefilledwithDatainEditBillingModalinReviewTab();

				checkoutPage.EnterNewCardinChangeCardForminEditBillingModalinReviewTab(retrieve("ChangeCardNo"), retrieve("ChangeCardCvv"), retrieve("ChangeCardExpiryMonth"), retrieve("ChangeCardExpiryYear"));
			}


			else 
			{
				testStepFailed("Edit Billing Modal is not displayed");
			}

			
			waitTime(2);

			checkoutPage.VerifyReviewTab();
			
			String ReviewTabPaymentDetailsCardType_Changed = checkoutPage.getReviewTabPaymentDetailsCardType();

			//testStepPassed("ReviewTabPaymentDetailsCardType_Changed : "+ReviewTabPaymentDetailsCardType_Changed);

			String ReviewTabPaymentDetailsCardNo_Changed = checkoutPage.getReviewTabPaymentDetailsCardNo();

			//testStepPassed("ReviewTabPaymentDetailsCardNo_Changed : "+ReviewTabPaymentDetailsCardNo_Changed);

			String ReviewTabPaymentDetailsCardExpiryDateYear_Changed = checkoutPage.getReviewTabPaymentDetailsCardExpiryDateYear();

			//testStepPassed("ReviewTabPaymentDetailsCardExpiryDateYear_Changed : "+ReviewTabPaymentDetailsCardExpiryDateYear_Changed);


			if (ReviewTabPaymentDetailsCardType_Changed.equalsIgnoreCase(retrieve("ChangeCardType"))) 
			{
				if (ReviewTabPaymentDetailsCardNo_Changed.equalsIgnoreCase(retrieve("ChangeCardNoVerify"))) 
				{
					if (ReviewTabPaymentDetailsCardExpiryDateYear_Changed.equalsIgnoreCase(retrieve("ChangeCardExpiryDateYear"))) 
					{

						testStepInfo("Changed Card Details is Updated in Review Tab");
					}
				}
			}

			else 
			{
				testStepFailed("Changed Card Details is not Updated in Review Tab");
			}



			checkoutPage.clickPaymentEditLinkinReviewTab();

			waitTime(2);


			if (checkoutPage.verifyEditPaymentModalisdisplayedinReviewTab()) 
			{
				checkoutPage.ClickAddNewCardLinkinEditShippingModalinReviewTab();

				checkoutPage.verifySavethisCardtoYourAccountisCheckedinEditShippingModalinReviewTab();

				checkoutPage.verifyMakeThisDefaultPaymentMethodinEditShippingModalinReviewTab();

				checkoutPage.EnterNewCardinChangeCardForminEditBillingModalinReviewTab(retrieve("NewCardNo"), retrieve("NewCardCvv"), retrieve("NewCardExpiryMonth"), retrieve("NewCardExpiryYear"));
			}


			else 
			{
				testStepFailed("Edit Billing Modal is not displayed");
			}



			waitTime(2);

			checkoutPage.VerifyReviewTab();
		
			

			String ReviewTabPaymentDetailsCardType_New = checkoutPage.getReviewTabPaymentDetailsCardType();

			//testStepPassed("ReviewTabPaymentDetailsCardType_New : "+ReviewTabPaymentDetailsCardType_New);

			String ReviewTabPaymentDetailsCardNo_New = checkoutPage.getReviewTabPaymentDetailsCardNo();

			//testStepPassed("ReviewTabPaymentDetailsCardNo_New : "+ReviewTabPaymentDetailsCardNo_New);

			String ReviewTabPaymentDetailsCardExpiryDateYear_New = checkoutPage.getReviewTabPaymentDetailsCardExpiryDateYear();

			//testStepPassed("ReviewTabPaymentDetailsCardExpiryDateYear_New : "+ReviewTabPaymentDetailsCardExpiryDateYear_New);


			if (ReviewTabPaymentDetailsCardType_New.equalsIgnoreCase(retrieve("NewCardType"))) 
			{
				if (ReviewTabPaymentDetailsCardNo_New.equalsIgnoreCase(retrieve("NewCardNoVerify"))) 
				{
					if (ReviewTabPaymentDetailsCardExpiryDateYear_New.equalsIgnoreCase(retrieve("NewCardExpiryDateYear"))) 
					{

						testStepInfo("New Card Details is Updated in Review Tab");
					}
				}
			}

			else 
			{
				testStepFailed("New Card Details is not Updated in Review Tab");
			}


			homePage.ClickonHomePageLogo();


			if (browser.equalsIgnoreCase("InternetExplorer")) 
			{

				homePage.ClickonIEAccountHeaderlinkgreetinglink();

			} 


			else if (browser.equalsIgnoreCase("Safari")) 
			{
				homePage.ClickonSafariHeaderlinkgreetinglink();
				waitTime(2);
			}

			else 
			{

				homePage.ClickonHeaderlinkgreetinglink();

			}


			myAccountPage.verifyAccountDashBoardPageisDisplayed();

			myAccountPage.clickOnAccountInfoLink();

			myAccountPage.clickOnAccountInfo_PaymentMethodsLink();



			String AccountDashboardPaymentDetailsCardType_New = myAccountPage.getPaymentDetailsCardType();

			testStepPassed("AccountDashboardPaymentDetailsCardType_New : "+AccountDashboardPaymentDetailsCardType_New);

			String AccountDashboardPaymentDetailsCardNo_New = myAccountPage.getPaymentDetailsCardNo();

			testStepPassed("AccountDashboardPaymentDetailsCardNo_New : "+AccountDashboardPaymentDetailsCardNo_New);

			String AccountDashboardPaymentDetailsCardMonthYear_New = myAccountPage.getPaymentDetailsCardExpiryMonthYear();

			testStepPassed("AccountDashboardPaymentDetailsCardMonthYear_New : "+AccountDashboardPaymentDetailsCardMonthYear_New);



		/*	if (AccountDashboardPaymentDetailsCardType_New.equalsIgnoreCase(ReviewTabPaymentDetailsCardType_New)) 
			{*/		
				if (AccountDashboardPaymentDetailsCardNo_New.equalsIgnoreCase(ReviewTabPaymentDetailsCardNo_New)) 
				{
					if (AccountDashboardPaymentDetailsCardMonthYear_New.equalsIgnoreCase(ReviewTabPaymentDetailsCardExpiryDateYear_New)) 
					{

						testStepInfo("New Card Details in Review Tab and Account Dashboard are same");
					}
				//}
			}

			else 
			{
				testStepFailed("New Card Details in Review Tab and Account Dashboard are not same");
			}


			
			myAccountPage.verifyPaymentCardisMadeDefault();
			
			

			if (browser.equalsIgnoreCase("InternetExplorer")) 
			{

				homePage.RegisteredUserProceedtoCheckoutinIE();

			}
			else 
			{

				//viewshoppingbag();
				clickonChromeFirefoxCheckout();

			}
			
			
			checkoutPage.VerifyReviewTab();
			
			
	/*		checkoutPage.EnterCvvinReviewTab(retrieve("CreditCardCvv"));

			checkoutPage.EnterSavedCvvinReviewTab(retrieve("CreditCardCvv"));

			checkoutPage.EnterSavedCvvinReviewTabSafari();*/


			if(checkoutPage.clickPlaceOrderButton())
			{

				orderConfirmationPage.clickOnCloseButtonInSurveyFormPopup();

				orderConfirmationPage.getOrderNumber();

				homePage.ClickonHomePageLogo();
			}
			else
			{
				homePage.ClickonHomePageLogo();
				waitTime(2);
				if (browser.equalsIgnoreCase("InternetExplorer")) 
				{

					shoppingcartPage.checkingtheshoppingbagcountemptyandifnotemptyingtheshoppinginIE();

				}

				else if (browser.equalsIgnoreCase("Safari")) 
				{
					shoppingcartPage.checkingtheSafarishoppingbagcountemptyandifnotemptyingtheshopping();
				}


				else 
				{

					shoppingcartPage.checkingtheshoppingbagcountemptyandifnotemptyingtheshopping();

				}
				homePage.ClickonHomePageLogo();
			}



			if (browser.equalsIgnoreCase("Chrome") || browser.equalsIgnoreCase("Firefox")) 
			{
				homePage.ClickonSignoutinHeaderlinkgreetinglink();
			} 


			else if (browser.equalsIgnoreCase("Safari")) 
			{
				homePage.ClickonSafariSignOutlink();
			}

			else 
			{
				homePage.ClickonIESignoutinHeaderlinkgreetinglink();
			}

			homePage.verifyUserLoggedOutSuccessfully();				
		}
		catch(Exception e){
			testStepFailed(e.toString());
		}
		finally{
			if(checkoutPage.testCaseExecutionStatus ||
					orderConfirmationPage.testCaseExecutionStatus ||
					productDescriptionPage.testCaseExecutionStatus ||
					productGridPage.testCaseExecutionStatus ||
					myAccountPage.testCaseExecutionStatus ||
					myAccountAddressBookPage.testCaseExecutionStatus ||
					myAccountPaymentMethodsPage.testCaseExecutionStatus ||
					shoppingcartPage.testCaseExecutionStatus){
				this.testCaseExecutionStatus=true;
			}
			destroyObjects();
			driver.quit();
		}
		testStepInfo("");
		testStepInfo("*******************************");
		testStepInfo("Test Execution Completed");
		testStepInfo("*******************************");
	}
}