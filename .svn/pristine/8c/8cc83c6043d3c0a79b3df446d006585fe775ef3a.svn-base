package scenarios;


import baseClass.BaseClass;
import baseClass.PopupWindows;
import mwPages.ClassicGiftCardPage;
import mwPages.DepartmentNavigation;
import mwPages.EGiftCardPage;
import mwPages.GiftCardsPage;
import mwPages.ProductDescriptionPage;
import mwPages.ProductGridPage;
import mwPages.ShoppingCartPage;
import mwPages.HomePage;

public class AddToCartDifferentCloneIdTest extends PopupWindows {

	private BaseClass obj;


	private PopupWindows popupWindows;
	private DepartmentNavigation departmentNavigation;
	private ProductDescriptionPage productDescriptionPage;
	private ProductGridPage productGridPage;
	private ShoppingCartPage shoppingcartPage;
	private GiftCardsPage giftcardPage;
	private EGiftCardPage eGiftcardPage;
	private ClassicGiftCardPage classicGiftcardPage;
	private HomePage homePage;

	public AddToCartDifferentCloneIdTest(BaseClass obj) {
		super(obj);
		this.obj=obj;
	}

	public void createObjects(String browser){
		obj.driver=driver;
		obj.currentBrowser=browser;

		classicGiftcardPage = new	ClassicGiftCardPage(obj);
		departmentNavigation = new	DepartmentNavigation(obj);
		eGiftcardPage = new	EGiftCardPage(obj);
		giftcardPage = new	GiftCardsPage(obj);
		productDescriptionPage = new	ProductDescriptionPage(obj);
		productGridPage = new	ProductGridPage(obj);
		shoppingcartPage = new	ShoppingCartPage(obj);
		popupWindows=new PopupWindows(obj);
		homePage= new HomePage(obj);
	}



	public void destroyObjects(){


		classicGiftcardPage = null;
		departmentNavigation = null;
		eGiftcardPage = null;
		giftcardPage = null;
		productDescriptionPage = null;
		productGridPage = null;
		shoppingcartPage = null;
		popupWindows=null;
		homePage = null;

	}



	String JSESSIONIDFromApplication;
	String JSESSIONIDAfterNewValue;
	String JSESSIONIDAfterAddingProduct;
	String CLONEIDFromApplication;
	String CLONEIDAfterAddingProduct;
	String CLONEIDAfterNewValue;

	public void addToCartDifferentCloneIdTestScenario(String machineName,String host,String port,String browser,String os,String browserVersion,String osVersion, String tcId){
		try{	
			//1.Verify add to cart of Each product ( suits,ties,accessory,pant,shoes,physical gift card and egift card) works correctly
			//openBrowser(machineName, host, port, browser, os, browserVersion, osVersion);
			createObjects(browser);


			JSESSIONIDFromApplication = getJSESSIONIDOnceBrowserInitiated();

			CLONEIDFromApplication = getCLONEIDOnceBrowserInitiated();

			setJSESSIONID();

			//pageRefresh();

			JSESSIONIDAfterNewValue = getJSESSIONIDAfterNewValueChanged();

			CLONEIDAfterNewValue = getCLONEIDAfterNewValueChanged();


			/*if (browser.equalsIgnoreCase("InternetExplorer")) {

				shoppingcartPage.checkingtheshoppingbagcountemptyandifnotemptyingtheshoppinginIE();

			}
			else {

				shoppingcartPage.checkingtheshoppingbagcountemptyandifnotemptyingtheshopping();

			}
			 */
			//homePage.ClickonHomePageLogo();




			if(getConfigProperty("UseSKU_ID").equalsIgnoreCase("no"))

			{	

				departmentNavigation.clickOnDepartmentSubCategoryOrPromoLink(retrieve("DepartmentName"), retrieve("SubCategoryName"));

				//productGridPage.VerifyProductslistedinPGPIfNotRefreshthePage();

				productGridPage.VerifyProductslistedinPGPIfNotRefreshthePageDifferentCloneId();

				//productGridPage.selectProductInProductGridPage(retrieve("ProductName"));

				productGridPage.selectProductInProductGridPageDifferentCloneId(retrieve("ProductName"));

				//productDescriptionPage.verifyProductDisplayedinPDPPageIfNotRefreshThePage();

				productDescriptionPage.verifyProductDisplayedinPDPPageIfNotRefreshThePageDifferentCloneId();

			}

			else

			{

				searchProductnew(retrieve("SkuID"));

				//productDescriptionPage.verifyProductDisplayedinPDPPageIfNotRefreshThePage();

				productDescriptionPage.verifyProductDisplayedinPDPPageIfNotRefreshThePageDifferentCloneId();

			}

			/*productDescriptionPage.selectSizeFromProductDescriptionPagenew(retrieve("SelectSize"));

			productDescriptionPage.selectSizeFromProductDescriptionPageforDifferentCloneid(retrieve("ProductSize"));

			productDescriptionPage.clickOnAddToShoppingBagFromProductDescriptionPage();

			productDescriptionPage.clickPDPAddtoShoppingBagButton();

			productDescriptionPage.enterProductCountinPDP(retrieve("ProductQuantity"));*/

			productDescriptionPage.clickPDPAddtoShoppingBagButtonDifferentCloneId();

			//productDescriptionPage.getJSESSIONIDAFTERADDINGPRODUCT();

			JSESSIONIDAfterAddingProduct = getJSESSIONIDAfterAddingProduct();

			CLONEIDAfterAddingProduct = getCLONEIDAfterAddingProduct();

			if(CLONEIDAfterNewValue.equalsIgnoreCase(CLONEIDAfterAddingProduct))
			{

				testStepInfo("Clone Id's Before and After Adding the product are same");

			}
			else
			{
				testStepFailed("Clone Id's Before and After Adding the product are different");
			}	




			if (browser.equalsIgnoreCase("InternetExplorer")) {

				homePage.clickProceedtoCheckoutMiniBaginIE();

			}
			else {

				//viewshoppingbag();
				clickonChromeFirefoxCheckout();

			}


			shoppingcartPage.removeAllItemsfromShoppingCart();

			//homePage.ClickonHomePageLogo();




		}
		catch(Exception e)
		{
			e.printStackTrace();
			testStepFailed(e.toString());
		}finally{
			if(classicGiftcardPage.testCaseExecutionStatus ||
					departmentNavigation.testCaseExecutionStatus ||
					eGiftcardPage.testCaseExecutionStatus ||
					giftcardPage.testCaseExecutionStatus ||
					productDescriptionPage.testCaseExecutionStatus ||
					productGridPage.testCaseExecutionStatus ||
					shoppingcartPage.testCaseExecutionStatus ||
					popupWindows.testCaseExecutionStatus){
				this.testCaseExecutionStatus=true;
			}
			//destroyObjects();
			//driver.quit();
		}
		testStepInfo("");
		testStepInfo("*******************************");
		testStepInfo("Test Execution Completed");
		testStepInfo("*******************************");
	}


}